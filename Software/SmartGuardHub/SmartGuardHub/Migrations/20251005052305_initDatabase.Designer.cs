// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartGuardHub.Infrastructure;

#nullable disable

namespace SmartGuardHub.Migrations
{
    [DbContext(typeof(SmartGuardDbContext))]
    [Migration("20251005052305_initDatabase")]
    partial class initDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("SmartGuardHub.Features.DeviceManagement.Sensor", b =>
                {
                    b.Property<string>("SensorId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<string>("FwVersion")
                        .HasColumnType("TEXT");

                    b.Property<int>("InchingModeWidthInMs")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsInInchingMode")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastSeen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<string>("LatestValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<int>("Protocol")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RawResponse")
                        .HasColumnType("TEXT");

                    b.Property<int>("SwitchNo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UnitId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("SensorId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UnitId", "SwitchNo")
                        .IsUnique()
                        .HasDatabaseName("IX_Device_DeviceId_SwitchNo");

                    b.ToTable("Sensors");
                });
#pragma warning restore 612, 618
        }
    }
}
